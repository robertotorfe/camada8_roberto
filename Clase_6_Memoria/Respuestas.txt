a) ¿Quien inventó el sistema de control de versión Git y por qué?
Fue creado por Linus Torvalds en 2005 para ser utilizado en el desarrollo del kernel de Linux. Originalmente, la comunidad de desarrolladores de Linux utilizaba BitKeeper, un sistema de control de versiones distribuido y comercial, aunque gratuito para proyectos de código abierto. Como el propio Linus Torvalds explica, BitKeeper suponí¬a un gran paso adelante comparado con otros SCMs como CVS y Subversion y, sin duda, inspiró muchos de los conceptos en los que se basa git (especialmente el ser un sistema distribuido).
Sin embargo, el hecho de ser un software propietario y ciertas desavenencias con su creador, Larry McVoy, llevaron a Linus Torvalds a decantarse por buscar un nuevo sistema de control de versiones. Tras probar muchas de las soluciones existentes y descubrir que ninguna cumplí¬a con sus requisitos, Torvalds decidió diseñar e implementar su propio sistema de control de versiones. Tan sólo un dí¬a después ya habí-a desarrollado las bases de git para poder auto-gestionar el propio código de git en git y, una semana después, ya tení¬a una primera versión. 

b) ¿A quién pertenece actualmente Github y por qué?
Github actualmente le pertenece a Microsoft. El mensaje oficial de confirmación de Microsoft habla de cómo este acuerdo "refuerza nuestro compromiso con la libertad, apertura e innovación para los desarrolladores". Desde el nombramiento de Satya Nadella como CEO de Microsoft (sustituyendo al infame Steve Ballmer), la compañía ha adoptado una estrategia nueva, mucho más abierta al mundo del software libre y a la integración con otras plataformas y servicios. Un ejemplo es la adquisición en 2016 de Xamarin, una plataforma que permite crear aplicaciones móviles que pueden funcionar en distintos sistemas, como iOS, Android y (por supuesto) Windows. Y es, precisamente, el que fuera CEO de Xamarin, Nat Friedman, quien será nuevo CEO de GitHub. Así pues, esta adquisición es, sin duda, un acercamiento a la comunidad más vibrante en el desarrollo de software libre y abierto.
Además, hay otro motivo de peso: Microsoft Azure. En plena explosión de cloud services (servicios en la nube), con un crecimiento previsto para este año del 21.4%, Microsoft tiene que competir con el líder indiscutible a día de hoy, la todopoderosa Amazon con AWS. Qué mejor forma de hacerlo que estar en contacto directo con los desarrolladores que trabajan en esos servicios, ver sus necesidades y ofrecerles herramientas que faciliten su integración con Azure.

c) ¿Hay otra forma que no sea la terminar para trabajar con Github?
Sí hay otras aplicaciones con las cuales se puede trabajar, como por ejemplo Visual Studio
